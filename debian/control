Source: libmoox-struct-perl
Section: perl
Priority: optional
Build-Depends:
 debhelper-compat (= 12),
 libb-hooks-endofscope-perl <!nocheck>,
 libdata-printer-perl <!nocheck>,
 libexporter-tiny-perl <!nocheck>,
 libmoo-perl <!nocheck>,
 libnamespace-autoclean-perl <!nocheck>,
 libobject-id-perl <!nocheck>,
 libtype-tiny-perl <!nocheck>,
 perl,
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders:
 Jonas Smedegaard <dr@jones.dk>,
Standards-Version: 4.5.0
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/libmoox-struct-perl.git
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/libmoox-struct-perl
Homepage: https://metacpan.org/release/MooX-Struct
Testsuite: autopkgtest-pkg-perl
Rules-Requires-Root: no

Package: libmoox-struct-perl
Architecture: all
Depends:
 libb-hooks-endofscope-perl,
 libexporter-tiny-perl,
 libmoo-perl,
 libnamespace-autoclean-perl,
 libobject-id-perl,
 libtype-tiny-perl,
 ${misc:Depends},
 ${perl:Depends},
Description: simple lightweight record-like structures making sounds like cows
 MooX::Struct allows you to create cheap struct-like classes
 for your data using Moo.
 .
 While similar in spirit to MooseX::Struct and Class::Struct,
 MooX::Struct has a somewhat different usage pattern.
 Rather than providing you with a "struct" keyword
 which can be used to define structs,
 you define all the structs as part of the "use" statement.
 This means they happen at compile time.
 .
 A struct is just an "anonymous" Moo class.
 MooX::Struct creates this class for you,
 and installs a lexical alias for it in your namespace.
 Thus your module can create a "Point3D" struct,
 and some other module can too,
 and they won't interfere with each other.
 All struct classes inherit from MooX::Struct.
